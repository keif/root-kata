{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Driver.js","webpack:///./src/main.js","webpack:///./src/utils/utils.js","webpack:///external \"fs\"","webpack:///external \"process\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,uCAAuC;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA,mCAAmC,iBAAiB,IAAI,uBAAuB;;AAE/E;AACA;AACA,uCAAuC,mBAAmB;AAC1D;;AAEA;AACA;AACA;;AAEe,qEAAM,EAAC;;;;;;;;;;;;;AC9DtB;AAAA;AAAgD;;AAEhD;;AAEA;AACA,iBAAiB,oEAAe;AAChC;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoB;AACU;;AAEC;;AAE/B;AACA;AACA,mCAAmC,8CAAO;AAC1C,QAAQ,yCAAE;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,+CAAM;AACxC,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAQE;;;;;;;;;;;;ACxEF,+B;;;;;;;;;;;ACAA,oC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","class Driver {\n    constructor(driverName) {\n        this._driverName = driverName;\n        this._totalDrivingTimeInHrs = 0;\n        this._totalDistInMiles = 0;\n        this._milesPerHour = 0;\n    }\n\n    _calcTotalTimeInHrs(drivingTimes) {\n        const { startHour, startMin, endHour, endMin } = drivingTimes;\n        return endHour + endMin / 60 - (startHour + startMin / 60);\n    }\n\n    _convertTimeToNumber(drivingTimes) {\n        return drivingTimes.split(\":\").map(num => Number(num));\n    }\n\n    getName() {\n        return this._driverName;\n    }\n\n    getMilesPerHour() {\n        return this._milesPerHour;\n    }\n\n    setMilesPerHour() {\n        this._milesPerHour = Math.round(this._totalDistInMiles / this._totalDrivingTimeInHrs);\n    }\n\n    getTotalDistInMiles() {\n        return this._totalDistInMiles;\n    }\n\n    setTotalDistInMiles(distInMiles) {\n        this._totalDistInMiles += distInMiles;\n        return this._totalDistInMiles;\n    }\n\n    getTotalTimeInHrs() {\n        return this._totalDrivingTimeInHrs;\n    }\n\n    setTotalTimeInHrs(drivingTime) {\n        const [startTime, endTime, ..._rest] = drivingTime;\n        const [startHour, startMin] = this._convertTimeToNumber(startTime);\n        const [endHour, endMin] = this._convertTimeToNumber(endTime);\n        const drivingTimes = { startHour, startMin, endHour, endMin };\n        this._totalDrivingTimeInHrs += this._calcTotalTimeInHrs(drivingTimes);\n    }\n\n    getRecord() {\n        let driverDescription = `${this._driverName}: ${this._totalDistInMiles} miles`;\n\n        const driverHasTraveled = this._totalDistInMiles;\n        if (driverHasTraveled) {\n            driverDescription += ` @ ${this._milesPerHour} mph`;\n        }\n\n        return driverDescription;\n    }\n}\n\nexport default Driver;\n","import { readRecordsFile } from \"./utils/utils\";\n\ngetDriverRecords().then(data => console.log(data));\n\nasync function getDriverRecords() {\n    return await readRecordsFile();\n}\n","import fs from \"fs\";\nimport process from \"process\";\n\nimport Driver from \"../Driver\";\n\nfunction readRecordsFile() {\n    return new Promise((res, rej) => {\n        const driversRecordsFile = process.argv[2];\n        fs.readFile(driversRecordsFile, \"utf8\", (err, data) => {\n            if (err) {\n                rej(err);\n            }\n\n            const driversRecordsHash = createDriversRecordsHash(data);\n            const driversRecords = [];\n            for (let driver in driversRecordsHash) {\n                const currDriver = getCurrentDriver(driversRecordsHash, driver);\n                const driverAveragedCorrectSpeedLimit =\n                    currDriver.getMilesPerHour() > 4 && currDriver.getMilesPerHour() < 101;\n                const driverDidNotTravel = currDriver.getMilesPerHour() === 0;\n\n                if (driverAveragedCorrectSpeedLimit || driverDidNotTravel) {\n                    driversRecords.push(currDriver);\n                }\n            }\n\n            sortDriversByDistInMilesDescending(driversRecords);\n            let driverRecordsOutput = getDriversRecordsOutput(driversRecords);\n            res(driverRecordsOutput);\n        });\n    });\n}\n\nfunction createDriversRecordsHash(driverRecordsFileData) {\n    return driverRecordsFileData.split(\"\\n\").reduce((acc, nxt) => {\n        nxt = nxt.split(\" \");\n        const [command, driverName, ...rest] = nxt;\n\n        if (command === \"Driver\") {\n            acc[driverName] = new Driver(driverName);\n        } else {\n            let distInMiles = Math.round(Number(rest[2]));\n            acc[driverName].setTotalDistInMiles(distInMiles);\n            acc[driverName].setTotalTimeInHrs(rest);\n            acc[driverName].setMilesPerHour();\n        }\n\n        return acc;\n    }, {});\n}\n\nfunction getCurrentDriver(driversHash, currDriver) {\n    return driversHash[currDriver];\n}\n\nfunction getDriversRecordsOutput(listOfDrivers) {\n    return listOfDrivers.reduce((acc, nxt) => {\n        acc += nxt.getRecord() + \"\\n\";\n        return acc;\n    }, \"\");\n}\n\nfunction sortDriversByDistInMilesDescending(listOfDrivers) {\n    return listOfDrivers.sort((curr, nxt) => nxt.getTotalDistInMiles() - curr.getTotalDistInMiles());\n}\n\nexport {\n    readRecordsFile,\n    createDriversRecordsHash,\n    getCurrentDriver,\n    getDriversRecordsOutput,\n    sortDriversByDistInMilesDescending\n};\n","module.exports = require(\"fs\");","module.exports = require(\"process\");"],"sourceRoot":""}